version: '3.6'
services:
  ia_configmgr_agent:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../ConfigMgrAgent
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../ConfigMgrAgent/Dockerfile
      args:
        EII_VERSION: ${EII_VERSION}
        EII_USER_NAME: ${EII_USER_NAME}
        EII_UID: ${EII_UID}
        ETCD_VERSION: ${ETCD_VERSION}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        PYTHON_VERSION: ${PYTHON_VERSION}
    read_only: true
    image: ${DOCKER_REGISTRY}edgeinsights/ia_configmgr_agent:${EII_VERSION}
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    restart: unless-stopped
    container_name: ia_configmgr_agent
    environment:
      SERVICES: "EtcdUI,Telegraf,DataStore,Kapacitor,MultiModalVisualizationStreaming,MultiModalVisualization,OpcuaExport,RestDataExport,mqtt-broker,mqtt-publisher"
      AppName: "ConfigMgrAgent"
      HOST_IP: $HOST_IP
      HOST_TIME_ZONE: $HOST_TIME_ZONE
      EII_INSTALL_PATH: $EII_INSTALL_PATH
      SOCKET_DIR: $SOCKET_DIR
      TC_DISPATCHER_PATH: $TC_DISPATCHER_PATH
      DEV_MODE: $DEV_MODE
      ETCDCTL_API: 3
      ETCD_HOST: $ETCD_HOST
      ETCD_DATA_DIR: $ETCD_DATA_DIR
      ETCD_CLIENT_PORT: $ETCD_CLIENT_PORT
      ETCD_PEER_PORT: $ETCD_PEER_PORT
      ETCD_NAME: $ETCD_NAME
      ETCDROOT_PASSWORD: $ETCDROOT_PASSWORD
      ETCD_PREFIX: $ETCD_PREFIX
      EII_USER_NAME: $EII_USER_NAME
      PROVISION_MODE: $PROVISION_MODE
      no_proxy: $eii_no_proxy,0.0.0.0:$ETCD_CLIENT_PORT,0.0.0.0:$ETCD_PEER_PORT
      NO_PROXY: $eii_no_proxy,0.0.0.0:$ETCD_CLIENT_PORT,0.0.0.0:$ETCD_PEER_PORT
    networks:
    - eii
    ports:
    - $ETCD_CLIENT_PORT:$ETCD_CLIENT_PORT
    - $ETCD_PEER_PORT:$ETCD_PEER_PORT
    ipc: "none"
    volumes:
    - ./Certificates:/EII/Certificates:rw
    - ./eii_config.json:/EII/etcd/config/eii_config.json
    - $EII_INSTALL_PATH/data/etcd:$ETCD_DATA_DIR
    - $EII_INSTALL_PATH:$EII_INSTALL_PATH
    - $EII_INSTALL_PATH/models/:/app/models/
    - $EII_INSTALL_PATH/sockets:$SOCKET_DIR
    - $EII_INSTALL_PATH/data:/data
    - $EII_INSTALL_PATH/tools_output:/tools_output
    - $EII_INSTALL_PATH/saved_images:/saved_images
    - $EII_INSTALL_PATH/rde:/rde
    - $TC_DISPATCHER_PATH:$TC_DISPATCHER_PATH
  ia_etcd_ui:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../EtcdUI
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../EtcdUI/Dockerfile
      args:
        no_proxy: ${eii_no_proxy}
        ETCD_VERSION: ${ETCD_VERSION}
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        PYTHON_VERSION: ${PYTHON_VERSION}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        GO_VERSION: ${GO_VERSION}
        PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
    read_only: true
    image: ${DOCKER_REGISTRY}edgeinsights/ia_etcd_ui:${EII_VERSION}
    container_name: ia_etcd_ui
    hostname: ia_etcd_ui
    restart: unless-stopped
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "EtcdUI"
      DEV_MODE: ${DEV_MODE}
      NGINX_PORT: 7071
      no_proxy: ${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      ETCD_ENDPOINT: "$ETCD_HOST:$ETCD_CLIENT_PORT"
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "vol_etcd_keeper:/opt/nginx"
    - "vol_etcd_keeper_nginx_cache:/var/cache/nginx"
    - "vol_etcd_keeper_nginx_pid:/var/run"
    - ./Certificates/EtcdUI:/run/secrets/EtcdUI:ro
    ipc: "none"
    ports:
    - 7071:7071
    - 7070:7070

  ia_telegraf:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Telegraf
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Telegraf/Dockerfile
      args:
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        TELEGRAF_SOURCE_TAG: ${TELEGRAF_SOURCE_TAG}
        TELEGRAF_GO_VERSION: ${TELEGRAF_GO_VERSION}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        PYTHON_VERSION: ${PYTHON_VERSION}
        GO_VERSION: ${GO_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        GO_PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
    container_name: ia_telegraf
    hostname: ia_telegraf
    image: ${DOCKER_REGISTRY}edgeinsights/ia_telegraf:${EII_VERSION}
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    read_only: true
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "Telegraf"
      DEV_MODE: ${DEV_MODE}
      no_proxy: "${ETCD_HOST},ia_datastore, ia_mqtt_broker"
      NO_PROXY: "${ETCD_HOST},ia_datastore,ia_mqtt_broker"
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      MQTT_BROKER_HOST: "ia_mqtt_broker"
      INFLUX_SERVER: ia_datastore
      INFLUXDB_PORT: $INFLUXDB_PORT
      ETCD_PREFIX: ${ETCD_PREFIX}
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    ports:
    - 65077:65077
    networks:
    - eii
    volumes:
    - "vol_temp_telegraf:/tmp/"
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/Telegraf:/run/secrets/Telegraf:ro

  ia_datastore:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../DataStore
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../DataStore/Dockerfile
      args:
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        INFLUXDB_VERSION: ${INFLUXDB_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        EII_INSTALL_PATH: ${EII_INSTALL_PATH}
        MINIO_VERSION: ${MINIO_VERSION}
        GO_VERSION: ${GO_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        GO_PKG_SRC: ${PKG_SRC}
    read_only: false
    user: root
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    image: ${DOCKER_REGISTRY}edgeinsights/ia_datastore:${EII_VERSION}
    container_name: ia_datastore
    hostname: ia_datastore
    restart: unless-stopped
    environment:
      AppName: "DataStore"
      DEV_MODE: ${DEV_MODE}
      PROFILING_MODE: ${PROFILING_MODE}
      no_proxy: ${ETCD_HOST},ia_telegraf,ia_kapacitor
      NO_PROXY: ${ETCD_HOST},ia_telegraf,ia_kapacitor
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      INFLUXDB_TLS_CIPHERS: ${TLS_CIPHERS}
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    volumes:
    - "${EII_INSTALL_PATH}/data/influxdb:/influxdata"
    - "${EII_INSTALL_PATH}/data/minio:/data"
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/DataStore:/run/secrets/DataStore:ro
    - "vol_influxdb_conf:/tmp/influxdb"
    - "vol_miniodb_conf:/tmp"
    ports:
    - "$INFLUXDB_PORT:$INFLUXDB_PORT"
    - 65145:65145
    - 65030:65030
    - 65031:65031
    - 65032:65032
    - 65033:65033
    - 65034:65034
    - 5669:5669
    networks:
    - eii

  ia_kapacitor:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Kapacitor
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Kapacitor/Dockerfile
      args:
        KAPACITOR_VERSION: ${KAPACITOR_VERSION}
        INTELPYTHON_VERSION: ${INTELPYTHON_VERSION}
        HOST_TIME_ZONE: ${HOST_TIME_ZONE}
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        PYTHON_VERSION: ${PYTHON_VERSION}
        GO_VERSION: 1.15
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        GO_PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
    container_name: ia_kapacitor
    hostname: ia_kapacitor
    image: ${DOCKER_REGISTRY}edgeinsights/ia_kapacitor:${EII_VERSION}
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    read_only: true
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "Kapacitor"
      DEV_MODE: ${DEV_MODE}
      no_proxy: "${ETCD_HOST},ia_datastore,ia_kapacitor"
      NO_PROXY: "${ETCD_HOST},ia_datastore,ia_kapacitor"
      ETCD_HOST: ${ETCD_HOST}
      KAPACITOR_PORT: $KAPACITOR_PORT
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      INFLUX_SERVER: ia_datastore
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      PROFILING_MODE: ${PROFILING_MODE}
      KAPACITOR_URL: http://ia_kapacitor:$KAPACITOR_PORT/
      KAPACITOR_UNSAFE_SSL: "true"
      KAPACITOR_INFLUXDB_0_URLS_0: http://ia_datastore:$INFLUXDB_PORT/
      KAPACITOR_SERVER: 'ia_kapacitor'
      ETCD_PREFIX: ${ETCD_PREFIX}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "vol_temp_kapacitor:/tmp/"
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - "vol_dev_shm:/dev/shm"
    - ./Certificates/Kapacitor:/run/secrets/Kapacitor:ro
    ports:
    - "$KAPACITOR_PORT:$KAPACITOR_PORT"

  multimodal-data-visualization-streaming:
    image: ${DOCKER_REGISTRY}intel/multimodal-data-visualization-streaming:${EII_VERSION}
    container_name: multimodal-data-visualization-streaming
    hostname: multimodal-data-visualization-streaming
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Visualizer/multimodal-data-visualization-streaming
      args:
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        EII_SOCKET_DIR: "/opt/intel/eii/sockets"
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
    read_only: true
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    tmpfs:
    - /etc/nginx/sites-enabled:uid=1999,gid=1999
    - /usr/share/nginx:uid=1999,gid=1999
    - /var/log/nginx:uid=1999,gid=1999
    - /var/cache/nginx:uid=1999,gid=1999
    - /var/lib/nginx:uid=1999,gid=1999
    - /run:uid=1999,gid=1999
    - /tmp:uid=1999,gid=1999
    - /opt:uid=1999,gid=1999
    environment:
      AppName: "MultiModalVisualizationStreaming"
      DEV_MODE: ${DEV_MODE}
      no_proxy: "${ETCD_HOST}"
      NO_PROXY: "${ETCD_HOST}"
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      HOST_IP: ${HOST_IP}
      MODE: "EII"
      PROVISION_MODE: ${PROVISION_MODE}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/MultiModalVisualizationStreaming:/run/secrets/MultiModalVisualizationStreaming:ro
    ports:
    - 5004:5004
    - 5003:5003

  multimodal-data-visualization:
    image: ${DOCKER_REGISTRY}intel/multimodal-data-visualization:${EII_VERSION}
    container_name: multimodal-data-visualization
    hostname: multimodal-data-visualization
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../Visualizer/multimodal-data-visualization
      args:
        EII_VERSION: ${EII_VERSION}
        GRAFANA_VERSION: "9.0.2"
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        ALPINE_VERSION: "3.15"
        EII_SOCKET_DIR: "/opt/intel/eii/sockets"
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
    read_only: true
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "MultiModalVisualization"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST},ia_datastore
      NO_PROXY: ${ETCD_HOST},ia_datastore
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      HOST_IP: ${HOST_IP}
      MODE: "EII"
      INFLUX_SERVER: "ia_datastore"
      GRAFANA_SERVER: '0.0.0.0'
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      PROVISION_MODE: ${PROVISION_MODE}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "vol_temp_grafana:/tmp"
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/MultiModalVisualization:/run/secrets/MultiModalVisualization:ro
    ports:
    - 3000:3000


  ia_opcua_export:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../OpcuaExport
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../OpcuaExport/Dockerfile
      args:
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        GO_VERSION: ${GO_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        GO_PKG_SRC: ${PKG_SRC}
    read_only: true
    image: ${DOCKER_REGISTRY}edgeinsights/ia_opcua_export:${EII_VERSION}
    container_name: ia_opcua_export
    hostname: ia_opcua_export
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "OpcuaExport"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    ports:
    - 65003:65003

    volumes:
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - "vol_opcua:/tmp"
    - ./Certificates/OpcuaExport:/run/secrets/OpcuaExport:ro
    - ./Certificates/opcua:/run/secrets/opcua:ro

  ia_rest_export:
    build:
      context: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../RestDataExport
      dockerfile: /home/intel/edge_insights_industrial/Edge_Insights_for_Industrial_4.0.0/IEdgeInsights/build/../RestDataExport/Dockerfile
      args:
        EII_VERSION: ${EII_VERSION}
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        EII_INSTALL_PATH: ${EII_INSTALL_PATH}
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        GO_VERSION: ${GO_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        GO_PKG_SRC: ${PKG_SRC}
    image: ${DOCKER_REGISTRY}edgeinsights/ia_rest_export:${EII_VERSION}
    container_name: ia_rest_export
    hostname: ia_rest_export
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    read_only: true
    environment:
      AppName: "RestDataExport"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST}
      NO_PROXY: ${no_proxy}
      RequestEP: "ImageStore"
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      HTTP_METHOD_FETCH_METADATA: ${HTTP_METHOD_FETCH_METADATA}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - "${EII_INSTALL_PATH}:${EII_INSTALL_PATH}"
    - ./Certificates/RestDataExport:/run/secrets/RestDataExport:ro
    ports:
    - 8087:8087

  neuron:
    container_name: neuron
    hostname: neuron
    image: emqx/neuron:2.2.3
    networks:
    - eii
    ports:
    - 7000:7000
    - 7001:7001
    volumes:
    - nng-ipc:/tmp 

  ekuiper:
    container_name: ekuiper
    hostname: ekuiper
    image: lfedge/ekuiper:1.6.1-slim-python
    environment:
      MQTT_SOURCE_DEFAULT_SERVER: "tcp://cloud.host:1883"
      KUIPER_BASIC_CONSOLELOG: "true"
      KUIPER_BASIC_IGNORECASE: "false"
    networks:
    - eii
    ports:
    - 9081:9081
    - 127.0.0.1:20498:20498
    volumes:
    - nng-ipc:/tmp 

  ekuiper_manager:
    container_name: ekuiper_manager
    hostname: ekuiper_manager
    image: emqx/ekuiper-manager:1.6.1
    networks:
    - eii
    ports:
    - 9082:9082  
  
  emqx:
    container_name: emqx
    hostname: emqx
    image: emqx/emqx:4.4.4
    networks:
    - eii
    ports:
    - 1883:1883
    - 18083:18083
    - 8083:8083

networks:
  eii:
    driver: bridge
volumes:
  vol_etcd_keeper:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_etcd_keeper_nginx_cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_etcd_keeper_nginx_pid:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_temp_telegraf:
    driver: local
    driver_opts:
      type: tmpfs
      o: "size=5K"
      device: tmpfs
  vol_influxdb_conf:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_miniodb_conf:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_temp_kapacitor:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_dev_shm:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_temp_grafana:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_opcua:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  nng-ipc:
